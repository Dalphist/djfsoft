<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.manage.ProductMapper">
	<insert id="add" parameterType="Product">
		<selectKey keyProperty='id' resultType='int' order='AFTER'  >  
	        select LAST_INSERT_ID();  
	    </selectKey> 
		INSERT INTO t_product
		(product_code,bar_code,product_name,product_short_name,category_id,normal_purchase_price,
		cost,last_purchase_price,sale_price,stock_warn,product_unit,product_place,gmt_create,effective_flag)
		VALUES
		(#{productCode},#{barCode},#{productName},#{productShortName},#{categoryId},#{normalPurchasePrice},
		#{cost},#{lastPurchasePrice},#{salePrice},#{stockWarn},#{productUnit},#{productPlace},#{gmtCreate},#{effectiveFlag})
	</insert>

	<delete id="delete" parameterType="String">
		delete from t_product where id= #{productId}
	</delete>
	
	<delete id="delProductValue" parameterType="String">
		delete from t_product_to_value where product_id= #{productId}
	</delete>

	<update id="update" parameterType="Product">
		update t_product
		set product_code = #{productCode},bar_code = #{barCode},product_name = #{productName},product_short_name = #{productShortName},
		category_id = #{categoryId},normal_purchase_price = #{normalPurchasePrice},cost = #{cost},last_purchase_price = #{lastPurchasePrice},
		sale_price = #{salePrice},stock_warn = #{stockWarn},product_unit = #{productUnit},product_place = #{productPlace},
		gmt_modified = #{gmtModified},effective_flag = #{effectiveFlag}
		where id=#{id}
	</update>

	<select id="get" parameterType="String" resultType="ProductInfo">
		select p.*,(select pc.category_name from t_product_category pc where pc.id = p.category_id) as category_name
		from t_product p WHERE p.id = #{id}
	</select>

	<select id="list" parameterType="int" resultType="Product">
		select * from t_product 
		where FIND_IN_SET(category_id,queryChildrenCategoryInfo(#{categoryId}));
	</select>
	
	<select id="productInfolist" parameterType="String" resultType="ProductInfo">
		SELECT p.*,IFNULL(s.normal_quantity,0) as stock from 
		t_product p
		LEFT JOIN t_stock s ON s.product_id = p.id 
		WHERE p.category_id = #{categoryId};
	</select>
	
	<select id="getProductByCode" parameterType="Product" resultType="int">
		select count(*) from t_product where product_code = #{productCode}
		<if test="id != null">
			and id != #{id}
		</if>
	</select>
	
	<select id="getProductByBarCode" parameterType="Product" resultType="int">
		select count(*) from t_product where bar_code = #{barCode}
		<if test="id != null">
			and id != #{id}
		</if>
	</select>
	
	
</mapper>