<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.purchase.PurchaseStockInOrderMapper">
	<insert id="addOrder" parameterType="StockInOrderInfo">
		<selectKey keyProperty='id' resultType='int' order='AFTER'  >  
	        select LAST_INSERT_ID();  
	    </selectKey> 
		INSERT INTO t_stock_in_order
		(order_code,type_id,operater_id,operate_date)
		VALUES
		(#{orderCode},#{typeId},#{operaterId},#{operateDate})
	</insert>
	
	<insert id="addOrderDetail" parameterType="StockInOrderDetailInfo">
		INSERT INTO t_stock_in_order_detail
		(stock_in_order_id,purchase_order_id,product_id,normal_quantity,defect_quantity,
		useless_quantity,warehouse_id,rack_code)
		VALUES
		(#{stockInOrderId},#{purchaseOrderId},#{productId},#{normalQuantity},#{defectQuantity},
		#{uselessQuantity},#{warehouseId},#{rackCode})
	</insert>

	<delete id="delOrder" parameterType="String">
		delete from t_stock_in_order where id= #{orderId}
	</delete>
	
	<delete id="delOrderDetail" parameterType="String">
		delete from t_stock_in_order_detail where stock_in_order_id= #{orderId}
	</delete>

	<update id="updateOrder" parameterType="StockInOrderInfo">
		update t_stock_in_order
		set order_code = #{orderCode},operater_id = #{operaterId},operate_date = #{operateDate},confirm_id = #{confirmId},
		confirm_date = #{confirmDate},type_id = #{typeId},state_flag = #{stateFlag}
		where id=#{id}
	</update>

	<select id="orderList" resultType="StockInOrderInfo">
		select sio.id,sio.order_code,user1.user_name as operater_name,sio.operate_date,
		user2.user_name as confirm_name,sio.confirm_date,state.name as state_name,sio.state_flag
		from t_stock_in_order sio
		LEFT JOIN t_user user1 ON sio.operater_id = user1.id
		LEFT JOIN t_user user2 ON sio.confirm_id = user2.id
		LEFT JOIN t_dict_stock_in_state state ON sio.state_flag = state.nid
	</select>
	
	<select id="getDetail" parameterType="String" resultType="StockInOrderDetailInfo">
		select siod.id,siod.stock_in_order_id,siod.product_id,siod.product_id,siod.normal_quantity,siod.warehouse_id,IFNULL(siod.rack_code,'') as rack_code,
		p.bar_code,p.product_code,p.product_name,p.product_unit,so.order_code as purchase_order_code,IFNULL(w.name,'') as warehouse_name
		from t_stock_in_order_detail siod 
		JOIN t_product p ON siod.product_id = p.id 
		JOIN t_purchase_order so ON siod.purchase_order_id = so.id 
		LEFT JOIN t_warehouse w ON siod.warehouse_id = w.id
		WHERE siod.stock_in_order_id =  #{orderId} 
	</select>
	
	<select id="getNewCode" parameterType="String" resultType="String">
		select IFNULL(CONCAT(#{preStr},LPAD(SUBSTR(max(order_code),-1,3)+1,3,0)),CONCAT(#{preStr},'001')) 
		from t_stock_in_order
		where SUBSTR(order_code,1,12) = #{preStr} 
	</select>
	
	<select id="getPurchaseIdList" parameterType="String" resultType="String">
		SELECT purchase_order_id
		from t_stock_in_order_detail
		WHERE stock_in_order_id = #{stockInOrderId}
		GROUP BY purchase_order_id
	</select>
	
	<select id="getOrderById" parameterType="String" resultType="StockInOrderInfo">
		SELECT *
		from t_stock_in_order
		WHERE id = #{stockInOrderId}
	</select>
	
	
</mapper>